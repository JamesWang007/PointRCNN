#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Tue Oct 29 14:21:30 2019

@author: james
"""

import lib.utils.kitti_utils as kitti_utils
import numpy as np
import os
sample_id = 4
fpnet_file = os.path.join('../data/KITTI/frustum_net/data/', '%06d.txt' % sample_id)

def is_input_data_in_box3d(obj_list, d):
    x,y,z = d[0], d[1], d[2]
    for o in obj_list:
        '''
            xmin = o[4], ymin = o[5], xmax = o[6], ymax = [7]
        '''
        if o.cls_type == 'Car':
           o_corners = o.generate_corners3d()
           ymin = min(o_corners[:, 1])
           ymax = max(o_corners[:, 1])
           x1 = o_corners[0, 0]
           x2 = o_corners[1, 0]
           x3 = o_corners[2, 0]
           x4 = o_corners[3, 0]
           z1 = o_corners[0, 2]
           z2 = o_corners[1, 2]
           z3 = o_corners[2, 2]
           z4 = o_corners[3, 2]
           
           if y <= ymax and y >= ymin:
               if x <= max([x1, x2, x3, x4]) and x >= min([x1, x2, x3, x4]):
                   if z <= max([z1, z2, z3, z4]) and z >= min([z1, z2, z3, z4]):
                       return True               
    return False

obj_list = kitti_utils.get_objects_from_label(fpnet_file)
input_data = np.array([[ 7.0195e+00,  1.1723e+00,  2.9463e+01,  1.5688e+00,  1.6513e+00,
           4.0319e+00, -1.5472e+00],
         [ 3.4511e+00,  1.8044e+00,  2.8689e+01,  1.5860e+00,  1.6593e+00,
           4.0762e+00, -1.5547e+00],
         [-8.8002e+00,  2.8069e+00,  1.3297e+01,  1.5799e+00,  1.6413e+00,
           4.0564e+00,  1.5791e+00],
         [ 3.4021e+00,  1.8915e+00,  3.2790e+01,  1.6240e+00,  1.6763e+00,
           4.1426e+00, -1.5319e+00],
         [ 3.0272e+00,  1.8206e+00,  2.7107e+01,  1.5422e+00,  1.6261e+00,
           3.8636e+00, -1.5484e+00],
         [ 3.7982e+00,  2.0494e+00,  2.7752e+01,  1.5351e+00,  1.6312e+00,
           3.9271e+00, -1.5462e+00],
         [ 1.0193e+01,  8.3026e-01,  2.1396e+01,  1.6475e+00,  1.6777e+00,
           4.0846e+00, -1.0618e+00],
         [ 3.4002e+00,  1.5862e+00,  3.2312e+01,  1.5515e+00,  1.6403e+00,
           3.9623e+00, -1.5451e+00],
         [ 3.8832e+00,  2.1379e+00,  2.8214e+01,  1.5464e+00,  1.6375e+00,
           3.9614e+00, -1.5476e+00],
         [ 3.3099e+00,  1.8050e+00,  2.7793e+01,  1.5880e+00,  1.6572e+00,
           4.0594e+00, -1.5445e+00],
         [ 7.6235e+00,  1.3987e+00,  2.7029e+01,  1.5467e+00,  1.6313e+00,
           3.8833e+00, -1.6277e+00],
         [ 9.9199e+00,  8.6099e-01,  2.1498e+01,  1.6409e+00,  1.6723e+00,
           4.0561e+00, -9.9875e-01],
         [ 3.4519e+00,  1.6289e+00,  3.1764e+01,  1.5467e+00,  1.6373e+00,
           3.9560e+00, -1.5436e+00],
         [ 3.4649e+00,  1.9456e+00,  2.8363e+01,  1.5820e+00,  1.6582e+00,
           4.0739e+00, -1.5497e+00],
         [ 7.1286e+00,  1.0748e+00,  2.9641e+01,  1.5561e+00,  1.6459e+00,
           3.9932e+00, -1.5405e+00],
         [ 3.4471e+00,  1.7875e+00,  2.7414e+01,  1.6089e+00,  1.6698e+00,
           4.1230e+00, -1.5393e+00],
         [ 2.9364e+00,  1.9176e+00,  2.8624e+01,  1.5448e+00,  1.6343e+00,
           3.9300e+00, -1.5403e+00],
         [ 3.5221e+00,  1.4111e+00,  2.8904e+01,  1.5486e+00,  1.6384e+00,
           3.9660e+00, -1.6025e+00],
         [ 7.1207e+00,  1.1444e+00,  3.0045e+01,  1.5487e+00,  1.6370e+00,
           3.9711e+00, -1.5334e+00],
         [ 3.7516e+00,  1.8825e+00,  3.3097e+01,  1.5419e+00,  1.6332e+00,
           3.9253e+00, -1.5654e+00],
         [ 2.8504e+00,  1.9287e+00,  2.7293e+01,  1.5412e+00,  1.6314e+00,
           3.9114e+00, -1.5364e+00],
         [ 2.9446e+00,  1.8456e+00,  2.7730e+01,  1.6076e+00,  1.6679e+00,
           4.1157e+00, -1.5606e+00],
         [ 3.4195e+00,  1.8456e+00,  2.7215e+01,  1.6073e+00,  1.6666e+00,
           4.1041e+00, -1.5666e+00],
         [ 9.1386e+00,  2.6494e-01,  2.8291e+01,  1.6743e+00,  1.7041e+00,
           4.2997e+00,  3.6279e-02],
         [ 9.9573e+00,  7.3172e-01,  1.6557e+01,  1.5976e+00,  1.6659e+00,
           4.0971e+00, -1.5652e+00],
         [ 8.0203e+00,  1.8032e+00,  1.6077e+01,  1.5910e+00,  1.6591e+00,
           4.0909e+00, -2.0616e+00],
         [-6.6049e+00,  2.3705e+00,  3.9593e+01,  1.5856e+00,  1.6613e+00,
           4.1117e+00,  1.5861e+00],
         [ 7.1067e+00,  1.0944e+00,  3.0239e+01,  1.5746e+00,  1.6490e+00,
           4.0296e+00, -1.5458e+00],
         [ 7.3053e+00,  9.8242e-01,  2.7261e+01,  1.5558e+00,  1.6371e+00,
           3.9332e+00, -1.6441e+00],
         [ 1.1104e+01,  8.7843e-01,  1.9228e+01,  1.5389e+00,  1.6334e+00,
           3.9509e+00, -6.1295e-01],
         [ 7.1235e+00,  1.5271e+00,  2.8831e+01,  1.5708e+00,  1.6471e+00,
           4.0000e+00, -1.5345e+00],
         [ 7.2084e+00,  1.2087e+00,  3.4836e+01,  1.5385e+00,  1.6330e+00,
           3.9514e+00,  1.6254e+00],
         [ 7.8040e+00,  1.1973e+00,  2.6789e+01,  1.5409e+00,  1.6307e+00,
           3.9022e+00, -1.6400e+00],
         [ 3.4116e+00,  1.4778e+00,  2.9276e+01,  1.5813e+00,  1.6573e+00,
           4.0754e+00, -1.5837e+00],
         [-1.0042e+00, -1.6369e-01,  3.1688e+01,  1.5417e+00,  1.6356e+00,
           3.9599e+00, -1.5466e+00],
         [ 1.0757e+01,  8.9104e-01,  2.1207e+01,  1.5913e+00,  1.6635e+00,
           4.0979e+00, -6.3531e-01],
         [ 3.9539e+00,  1.8919e+00,  3.6904e+01,  1.5584e+00,  1.6444e+00,
           4.0033e+00, -1.5113e+00],
         [ 9.7839e+00,  8.3522e-01,  1.5805e+01,  1.5165e+00,  1.6279e+00,
           3.9163e+00, -9.7279e-01],
         [ 7.1997e+00,  1.0053e+00,  3.9757e+01,  1.5651e+00,  1.6492e+00,
           4.0415e+00,  1.6196e+00],
         [ 7.4063e+00,  1.5069e+00,  2.8277e+01,  1.5655e+00,  1.6436e+00,
           3.9660e+00, -1.5921e+00],
         [ 3.4734e+00,  2.2785e+00,  2.5041e+01,  1.5773e+00,  1.6546e+00,
           4.0526e+00, -1.5521e+00],
         [ 7.2486e+00,  1.3714e+00,  3.7220e+01,  1.5939e+00,  1.6586e+00,
           4.0756e+00,  1.5986e+00],
         [ 1.0024e+01,  8.9105e-01,  1.5900e+01,  1.5144e+00,  1.6262e+00,
           3.9099e+00, -6.6517e-01],
         [ 3.5026e+00,  1.7100e+00,  3.5058e+01,  1.5651e+00,  1.6501e+00,
           4.0419e+00,  1.6275e+00],
         [ 3.4196e+00,  1.9785e+00,  2.8155e+01,  1.5433e+00,  1.6348e+00,
           3.9421e+00, -1.5385e+00],
         [ 3.1121e+00,  1.8022e+00,  2.9758e+01,  1.5764e+00,  1.6464e+00,
           3.9885e+00, -1.5610e+00],
         [ 1.0173e+01,  7.5111e-01,  2.1631e+01,  1.5961e+00,  1.6597e+00,
           4.0258e+00, -1.0022e+00],
         [ 3.8408e+00,  2.0531e+00,  2.2771e+01,  1.5643e+00,  1.6487e+00,
           4.0270e+00, -1.5575e+00],
         [ 7.1519e+00,  1.4100e+00,  3.0420e+01,  1.5516e+00,  1.6375e+00,
           3.9639e+00, -1.5361e+00],
         [ 1.0179e+01,  3.4332e-01,  2.0097e+01,  1.6382e+00,  1.6847e+00,
           4.2006e+00, -1.5910e+00],
         [ 2.8889e+00,  1.9462e+00,  2.6750e+01,  1.5427e+00,  1.6347e+00,
           3.9420e+00, -1.5140e+00],
         [ 7.2089e+00,  1.3735e+00,  3.8681e+01,  1.5816e+00,  1.6583e+00,
           4.0911e+00,  1.6102e+00],
         [-9.3710e+00,  2.8036e+00,  2.1029e+01,  1.6190e+00,  1.6698e+00,
           4.1486e+00,  1.5841e+00],
         [-2.0262e+01,  2.6346e+00,  3.8545e+01,  1.5745e+00,  1.6541e+00,
           4.0582e+00,  1.5897e+00],
         [ 7.1154e+00,  1.1529e+00,  2.9295e+01,  1.5703e+00,  1.6500e+00,
           4.0334e+00, -1.5504e+00],
         [-9.2752e+00,  2.7373e+00,  2.6092e+01,  1.6188e+00,  1.6727e+00,
           4.1542e+00,  1.6145e+00],
         [ 9.9834e+00,  1.0887e+00,  1.5681e+01,  1.5230e+00,  1.6245e+00,
           3.8924e+00, -6.2739e-01],
         [ 7.2017e+00,  1.4396e+00,  3.7641e+01,  1.5763e+00,  1.6545e+00,
           4.0645e+00,  1.6209e+00],
         [ 7.2998e+00,  1.4885e+00,  3.5005e+01,  1.5830e+00,  1.6517e+00,
           4.0496e+00,  1.6165e+00],
         [ 7.2380e+00,  1.4867e+00,  3.7919e+01,  1.5690e+00,  1.6477e+00,
           4.0256e+00,  1.6203e+00],
         [ 3.3908e+00,  1.7498e+00,  2.4115e+01,  1.5959e+00,  1.6648e+00,
           4.1060e+00, -1.5775e+00],
         [ 7.2062e+00,  1.2575e+00,  3.8209e+01,  1.6056e+00,  1.6697e+00,
           4.1389e+00,  1.6116e+00],
         [ 1.0681e+01,  3.0195e-01,  2.0257e+01,  1.6283e+00,  1.6807e+00,
           4.1853e+00, -1.5984e+00],
         [ 7.1992e+00,  1.2648e+00,  3.9426e+01,  1.5705e+00,  1.6512e+00,
           4.0531e+00,  1.6126e+00],
         [ 2.5218e+00,  1.7585e+00,  3.3388e+01,  1.5561e+00,  1.6404e+00,
           3.9623e+00, -1.5620e+00],
         [ 2.8293e+00,  1.7900e+00,  2.4790e+01,  1.5949e+00,  1.6635e+00,
           4.0986e+00, -1.5683e+00],
         [ 7.1538e+00,  1.2582e+00,  3.5275e+01,  1.5749e+00,  1.6565e+00,
           4.0758e+00,  1.6229e+00],
         [ 3.9906e+00,  1.6904e+00,  3.8083e+01,  1.5526e+00,  1.6388e+00,
           3.9708e+00, -1.5940e+00],
         [ 3.4720e+00,  1.8100e+00,  2.9498e+01,  1.5647e+00,  1.6422e+00,
           3.9744e+00, -1.5771e+00],
         [-2.4527e+01,  2.6178e+00,  3.8433e+01,  1.5397e+00,  1.6308e+00,
           3.9499e+00,  1.5349e+00],
         [-2.3539e+01,  2.4368e+00,  4.6696e+01,  1.5515e+00,  1.6399e+00,
           3.9803e+00, -1.5752e+00],
         [-2.3622e+01,  2.2766e+00,  4.6536e+01,  1.5731e+00,  1.6538e+00,
           4.0746e+00,  1.5957e+00],
         [-2.3571e+01,  2.2916e+00,  4.6904e+01,  1.5300e+00,  1.6292e+00,
           3.9198e+00, -1.5823e+00],
         [-1.6444e+01,  2.5887e+00,  5.8476e+01,  1.5365e+00,  1.6368e+00,
           3.9693e+00, -1.5744e+00],
         [-2.3519e+01,  2.5233e+00,  4.6016e+01,  1.5522e+00,  1.6380e+00,
           3.9822e+00, -1.5904e+00],
         [-2.3265e+01,  2.2274e+00,  4.6465e+01,  1.5529e+00,  1.6442e+00,
           4.0165e+00, -1.5534e+00],
         [-1.6543e+01,  2.3600e+00,  5.8629e+01,  1.5360e+00,  1.6353e+00,
           3.9519e+00, -1.5958e+00],
         [-2.3466e+01,  2.5611e+00,  4.5777e+01,  1.5289e+00,  1.6247e+00,
           3.9014e+00, -1.5875e+00],
         [-7.7540e+00,  2.3277e+00,  4.3779e+01,  1.5639e+00,  1.6503e+00,
           4.0631e+00,  1.5765e+00],
         [-1.6887e+01,  2.5893e+00,  5.8564e+01,  1.5288e+00,  1.6313e+00,
           3.9391e+00, -1.5550e+00],
         [-2.3504e+01,  2.4511e+00,  4.6351e+01,  1.5473e+00,  1.6353e+00,
           3.9663e+00, -1.5896e+00],
         [-3.0359e+01,  2.9175e+00,  5.5183e+01,  1.5170e+00,  1.6271e+00,
           3.9191e+00, -9.6923e-01],
         [-2.3485e+01,  2.3388e+00,  5.0569e+01,  1.5500e+00,  1.6390e+00,
           3.9759e+00,  1.6189e+00],
         [-9.6901e-01,  2.2586e+00,  5.2182e+01,  1.5503e+00,  1.6430e+00,
           4.0138e+00,  1.6130e+00],
         [-2.3464e+01,  2.4510e+00,  4.9995e+01,  1.5746e+00,  1.6491e+00,
           4.0422e+00, -1.5511e+00],
         [-2.3502e+01,  2.3367e+00,  4.9784e+01,  1.5588e+00,  1.6359e+00,
           3.9619e+00, -1.5561e+00],
         [-2.3509e+01,  2.3209e+00,  4.9382e+01,  1.5576e+00,  1.6358e+00,
           3.9621e+00, -1.5579e+00],
         [-2.3520e+01,  2.2919e+00,  4.8870e+01,  1.5455e+00,  1.6322e+00,
           3.9503e+00, -1.5923e+00],
         [-2.3454e+01,  2.2534e+00,  4.8522e+01,  1.5426e+00,  1.6291e+00,
           3.9296e+00, -1.5951e+00],
         [-2.3546e+01,  2.3134e+00,  4.9050e+01,  1.5534e+00,  1.6331e+00,
           3.9457e+00, -1.5719e+00],
         [-2.3408e+01,  2.5414e+00,  4.7093e+01,  1.5458e+00,  1.6340e+00,
           3.9515e+00, -1.5788e+00],
         [-2.3477e+01,  2.4227e+00,  4.9603e+01,  1.5731e+00,  1.6473e+00,
           4.0289e+00, -1.5471e+00],
         [-2.0842e+01,  2.8712e+00,  4.7257e+01,  1.5559e+00,  1.6427e+00,
           3.9887e+00, -1.5773e+00],
         [-1.9291e+01,  3.0692e+00,  4.7975e+01,  1.5533e+00,  1.6429e+00,
           3.9760e+00, -1.6033e+00],
         [-2.3502e+01,  2.3381e+00,  5.0209e+01,  1.5576e+00,  1.6361e+00,
           3.9595e+00, -1.5531e+00],
         [-3.1538e+01,  1.4008e+00,  5.0383e+01,  1.6221e+00,  1.6764e+00,
           4.1783e+00,  1.5518e+00],
         [-2.5050e+01,  2.0660e+00,  5.6641e+01,  1.5444e+00,  1.6430e+00,
           4.0107e+00, -1.0029e+00],
         [ 7.2086e+00,  1.2947e+00,  4.0325e+01,  1.5652e+00,  1.6480e+00,
           4.0403e+00,  1.6261e+00],
         [-1.0950e+01,  2.2645e+00,  5.3668e+01,  1.5514e+00,  1.6370e+00,
           3.9661e+00,  1.5936e+00],
         [-1.4049e+01,  2.4961e+00,  5.9536e+01,  1.5626e+00,  1.6424e+00,
           3.9842e+00,  1.5659e+00]])
rpn_scores_raw = []
for i in range(len(input_data)):
    d = input_data[i]
    
    if is_input_data_in_box3d(obj_list, d):
        rpn_scores_raw.append(1)
        
print(rpn_scores_raw)